# Watcom-to-native wrappers generation input data
#
# `name` can be just plain C symbol name, or a variable
# which stores pointer to the function to be called (in
# which case the name should be preceded with *).
#
# `cnv` is one of:
# W - watcom: args passed in eax, edx, ebx, ecx
# C - cdecl: args pushed on to stack, but regs preserved
# V - vararg: like cdecl but used for functions with v[name] variant
#
# `typ` is a return type, taken from the `args` value pool or:
# v - void (only for return type)
#
# `args` is a sequence of zero or more of:
# i - int
# x - int (displayed in hex)
# p - void * (general pointer)
# s - char *
# c - char
# v - ... (variadic args)
# l - va_list
# 
# name		cnv	typ	args
abs			W	i	i
access		W	i	sx
asctime		W	i	p
atoi		W	i	s
calloc		W	i	ii
chdir		W	i	s
clock		W	i
close		W	i	i
exit		W	i	i
fclose		W	i	p
fflush		W	i	p
fgetc		W	i	p
fgets		W	i	pip
fileno		W	i	p
fopen		W	i	ss
fprintf		V	i	psv
fputc		W	i	cp
fputs		W	i	sp
fread		W	i	piip
free		W	i	p
fseek		W	i	pii
ftell		W	i	p
getcwd		W	i	pi
getenv		W	i	s
gets		W	i	p
isatty		W	i	i
localtime	W	i	p
malloc		W	i	i
memcpy		W	i	ppi
memmove		W	i	ppi
memset		W	i	pci
mktime		W	i	p
printf		V	i	sv
puts		W	i	s
putchar		W	i	i
qsort		W	i	piip
rand		W	i
read		W	i	ipi
realloc		W	i	pi
rename		W	i	ss
rewind		W	v	p
rmdir		W	i	s
setbuf		W	i	pp
sprintf		V	i	psv
srand		W	i	x
sscanf		V	i	ssv
stat		W	i	sp
strcat		W	i	ss
strchr		W	i	sc
strcmp		W	i	ss
strcpy		W	i	ps
stricmp		W	i	ss
strlen		W	i	s
strncmp		W	i	ssi
strncpy		W	i	psi
strnicmp	W	i	ssi
strpbrk		W	i	ss
strrchr		W	i	sc
system		W	i	s
time		W	i	p
tolower		W	i	c
toupper		W	i	c
tzset		W	i
unlink		W	i	s
vfprintf	C	i	psl
vsprintf	C	i	psl
write		W	i	ipi
