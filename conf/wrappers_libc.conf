# Watcom-to-native wrappers generation input data
#
# `name` can be just plain C symbol name, or a variable
# which stores pointer to the function to be called (in
# which case the name should be preceded with *).
#
# `cnv` is one of:
# W - watcom: args passed in eax, edx, ebx, ecx
# C - cdecl: args pushed on to stack, but regs preserved
# V - vararg: like cdecl but used for functions with v[name] variant
#
# `typ` is a return type, taken from the `args` value pool or:
# v - void (only for return type)
#
# `args` is a sequence of zero or more of:
# i - int
# x - int (displayed in hex)
# p - void * (general pointer)
# s - char *
# c - char
# v - ... (variadic args)
# l - va_list
# 
# name		cnv	typ	args
abs			C	i	i
access		C	i	sx
asctime		C	i	p
atoi		C	i	s
calloc		C	i	ii
chdir		C	i	s
clock		C	i
close		C	i	i
exit		C	i	i
fclose		C	i	p
fflush		C	i	p
fgetc		C	i	p
fgets		C	i	pip
fileno		C	i	p
fopen		C	i	ss
fprintf		V	i	psv
fputc		C	i	cp
fputs		C	i	sp
fread		C	i	piip
free		C	i	p
fseek		C	i	pii
ftell		C	i	p
getcwd		C	i	pi
getenv		C	i	s
gets		C	i	p
isatty		C	i	i
localtime	C	i	p
malloc		C	i	i
memcpy		C	i	ppi
memmove		C	i	ppi
memset		C	i	pci
mktime		C	i	p
printf		V	i	sv
puts		C	i	s
putchar		C	i	i
qsort		C	i	piip
rand		C	i
read		C	i	ipi
realloc		C	i	pi
rename		C	i	ss
rewind		C	v	p
rmdir		C	i	s
setbuf		C	i	pp
sprintf		V	i	psv
srand		C	i	x
sscanf		V	i	ssv
stat		C	i	sp
strcat		C	i	ss
strchr		C	i	sc
strcmp		C	i	ss
strcpy		C	i	ps
stricmp		C	i	ss
strlen		C	i	s
strncmp		C	i	ssi
strncpy		C	i	psi
strnicmp	C	i	ssi
strpbrk		C	i	ss
strrchr		C	i	sc
system		C	i	s
time		C	i	p
tolower		C	i	c
toupper		C	i	c
tzset		C	i
unlink		C	i	s
vfprintf	C	i	psl
vsprintf	C	i	psl
write		C	i	ipi
